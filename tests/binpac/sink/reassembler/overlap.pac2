#
# @TEST-EXEC:  pac-driver-test -p Mini::Main %INPUT </dev/null >output
# @TEST-EXEC:  btest-diff output


module Mini;

export type Main = unit {

    var data : sink;

    on %init {
        self.data.connect(new Sub);
        self.data.write(b"123", 1);
        self.data.write(b"AB456", 2);
        self.data.write(b"789", 7);
        self.data.write(b"0", 0);
        self.data.close();

        print "";

        self.data.connect(new Sub);
        self.data.write(b"123", 1);
        self.data.write(b"ABC", 1);
        self.data.write(b"456", 4);
        self.data.write(b"789", 7);
        self.data.write(b"0", 0);
        self.data.close();

        print "";

        self.data.connect(new Sub);
        self.data.write(b"123", 1);
        self.data.write(b"ABCD", 1);
        self.data.write(b"456", 4);
        self.data.write(b"789", 7);
        self.data.write(b"0", 0);
        self.data.close();

        print "";

        self.data.connect(new Sub);
        self.data.write(b"23", 2);
        self.data.write(b"12AB", 1);
        self.data.write(b"56", 5);
        self.data.write(b"0", 0);
        self.data.close();
    }
};

export type Sub = unit {
    s: bytes &eod;

    on %done {
        print self.s;
    }

    on %gap(seq: uint<64>, len: uint<64>)  {
        print "Gap at input position", seq, "length", len;
        }

    on %skip(seq: uint<64>){
       print "Skipped to position", seq;
        }

    on %undelivered(seq: uint<64>, data: bytes) {
        print "Undelivered data at position", seq, ":", data;
        }

    on %overlap(seq: uint<64>, b1: bytes, b2: bytes) {
        print "Overlap at", seq, ":", b1, "vs", b2;
        }
};

